from ast import main
from http import server
import socket
import socketserver


"""s.bind() #this method bind the hostname and port number to the socket.
s.listen() #This method listen all the connection made by the socket.
s.accept() #This method accept the TCP client connection.

socket.connect('address') #This method initiate the connection between client and the server. 
socket.recv('bufsize') #This method receive infromtetion from TCP message that come from the socket.
socket.send('bytes') #Send information to the other socket in other machine. 
socket.recvfrom('data, address') #Data defines the received data and address specifies the address of socket sending the data. Return a value
socket.sendto('data, address') #Data defines the number of bytes sent and address specifies the address of the remote machine. Return a value
socket.close()
socket.gethostname() #it return the name of the host.
socket.sendall('data') #This method sends all the data to the socket which is connected to a remote machine"""

#Client side program
s= socket.socket (socket.AF_INET, socket.SOCK_STREAM)

host = socket.gethostname()
port = 8080
s.connect(host, port)
msg = s.recv(1024)

s.close()
print(msg.decode('ascii'))


#Server side program 
def Main():
    host = socket.gethostname()
    port = 8080
    serversocket = socket.socket()
    serversocket.bind(host, port)
    serversocket.listen(2)
    print('Socket listening')

    while True: 
        conn,addr = serversocket.accept()
        print('Got connetion from %s' % str(addr))
        msg = 'Connecting establish' + "\r\n"
        conn.send(msg.encode('ascii'))
        conn.close()
    

if __name__ == '_main_':
    Main()

#Handling exceptions
host3 = "192.168.43.75"
port3 = 12345
s2 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

try:
   s2.bind((host3,port3))
   s2.settimeout(3)
   data, addr = s2.recvfrom(1024)
   print ("recevied from ",addr)
   print ("obtained ", data)
   s2.close()
except socket.timeout :
   print ("No connection between client and server")
   s2.close()


